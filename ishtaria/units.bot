#!/usr/bin/perl
use strict;
use warnings;
# don't warn on empty data fields
no warnings 'uninitialized';
# use custom version of MediaWiki::Bot
use File::Basename;
use lib dirname (__FILE__);
use MediaWiki::Bot;

# Wikia login info
my $username = "Coax75ohm";
my $password;

# prompt for password if not defined and cookie file does not exist 
#
# NOTE: run the bot manually once to create the cookie before adding to cron
#
# TODO: add a check for when cookie expires
#       send out an email warning as date approaches
my $cookiefile = ".mediawiki-bot-" . $username . "-cookies";
if (! defined $password  && ! -e $cookiefile) {
    print "Wikia Password: ";
    # turn off echo, this only works on unix
    system('/bin/stty', '-echo');
    chomp($password = <STDIN>);
    system('/bin/stty', 'echo');
    print "\n";
}

# initialize bot
# use unsecured connection, 'cause that's all Wikia offers
my $bot = MediaWiki::Bot->new({
    protocol   => "http",
    host       => "age-of-ishtaria.wikia.com",
    path       => "",
    operator   => $username,
    login_data => { username => $username, password => $password },
});

# get list of units
my @unitlist = $bot->get_pages_in_category('Category:Units');

# remove subcategories and Grimoires
@unitlist = grep { ! /^Category:/ && ! /^Grimoire/ } @unitlist;

# get data for each unit
my ($unit, %units);
foreach $unit (@unitlist) {
    # get page for unit
    my $wikitext = $bot->get_text($unit);
    if (defined $wikitext) {
        # loop over each line
        foreach (split(/\n/, $wikitext)) {
           # strip off any leading whitespace and pipe
           s/^\s*\|\s*//;

           # pull out required data fields
           if    (/^rarity\s*=\s*(\d+)/)                  { $units{$unit}{'rarity'} = $1; }
           elsif (/^type\s*=\s*(\w+)/)                    { $units{$unit}{'type'} = ucfirst $1; }
           elsif (/^element\s*=\s*(\w+)/)                 { $units{$unit}{'element'} = ucfirst $1; }
           elsif (/^skill 1\s*=\s*(\w[\w\s']*\w)/)        { $units{$unit}{'skill 1'} = $1; }
           elsif (/^skill 1 type\s*=\s*(\w+)/)            { $units{$unit}{'skill 1 type'} = ucfirst $1; }
           elsif (/^skill 1 desc\s*=\s*(\w[\w\s'&]*\w)/)  { $units{$unit}{'skill 1 desc'} = $1; }
           elsif (/^skill 1 proc\s*=\s*(\d+)/)            { $units{$unit}{'skill 1 proc'} = $1; }
           elsif (/^skill 2\s*=\s*(\w[\w\s']*\w)/)        { $units{$unit}{'skill 2'} = $1; }
           elsif (/^skill 2 type\s*=\s*(\w+)/      )      { $units{$unit}{'skill 2 type'} = ucfirst $1; }
           elsif (/^skill 2 desc\s*=\s*(\w[\w\s'&]*\w)/)  { $units{$unit}{'skill 2 desc'} = $1; }
           elsif (/^skill 2 proc\s*=\s*(\d+)/)            { $units{$unit}{'skill 2 proc'} = $1; }
           elsif (/^atk 0\s*=\s*(\d+)/)                   { $units{$unit}{'atk 0'} = $1; }
           elsif (/^atk 1\s*=\s*(\d+)/)                   { $units{$unit}{'atk 1'} = $1; }
           elsif (/^atk 2\s*=\s*(\d+)/)                   { $units{$unit}{'atk 2'} = $1; }
           elsif (/^hp 0\s*=\s*(\d+)/)                    { $units{$unit}{'hp 0'} = $1; }
           elsif (/^hp 1\s*=\s*(\d+)/)                    { $units{$unit}{'hp 1'} = $1; }
           elsif (/^hp 2\s*=\s*(\d+)/)                    { $units{$unit}{'hp 2'} = $1; }
           elsif (/^cost\s*=\s*(\d+)/)                    { $units{$unit}{'cost'} = $1; }
        }
    }
}

# create wikitext for Unit_List page
my $wikitext = "{{Warning|info=This is a bot generated page. If you notice any missing or incorrect data, please edit the corresponding unit page and it will be updated here next time the bot runs.}}\n";
$wikitext .= "\n";
$wikitext .= "Note: Hover over skill to see details. For secondary sorting use shift+click.\n";
$wikitext .= "\n";

# make table header
$wikitext .= "{| class=\"wikitable sortable\"\n";
$wikitext .= "|-\n";
$wikitext .= "! class=\"unsortable\"|Image\n";
$wikitext .= "! Name\n";
$wikitext .= "! Rarity\n";
$wikitext .= "! Type\n";
$wikitext .= "! Element\n";
$wikitext .= "! Skill 1\n";
$wikitext .= "! Skill 2\n";
$wikitext .= "! ATK\n";
$wikitext .= "! ATK +1\n";
$wikitext .= "! ATK +2\n";
$wikitext .= "! HP\n";
$wikitext .= "! HP +1\n";
$wikitext .= "! HP +2\n";
$wikitext .= "! Cost\n";

# make table row for each unit
foreach $unit (@unitlist) {
    $wikitext .= "|-\n";

    # add image for unit if PNG file exists
    my $pageid = $bot->get_id("File:$unit.png");
    if (defined($pageid)) {
        $wikitext .= "| [[File:$unit.png|40px]]\n"
    } else {
        $wikitext .= "| \n";
    }

    $wikitext .= "| [[$unit]]\n";
    $wikitext .= "| style=\"text-align: center\"|$units{$unit}{'rarity'}\n";
    $wikitext .= "| $units{$unit}{'type'}\n";
    $wikitext .= "| $units{$unit}{'element'}\n";

    # create tooltip popup if all skill 1 fields are defined
    if (defined $units{$unit}{'skill 1'} && defined $units{$unit}{'skill 1 desc'} && defined $units{$unit}{'skill 1 type'} && defined $units{$unit}{'skill 1 proc'}) {
        $wikitext .= "| <span title=\"$units{$unit}{'skill 1'}&#10;$units{$unit}{'skill 1 desc'}&#10;$units{$unit}{'skill 1 proc'}%\">$units{$unit}{'skill 1 type'}</span>\n";
    # add dash for 1 and 2 star units if they have no skill 1
    } elsif ($units{$unit}{'rarity'} < 3 && ! defined $units{$unit}{'skill 1 type'}) {
        $wikitext .= "| style=\"text-align: center\"|-\n";
    } else {
        $wikitext .= "| $units{$unit}{'skill 1 type'}\n";
    }

    # create tooltip popup if all skill 2 fields are defined
    if (defined $units{$unit}{'skill 2'} && defined $units{$unit}{'skill 2 desc'} && defined $units{$unit}{'skill 2 type'} && defined $units{$unit}{'skill 2 proc'}) {
        $wikitext .= "| <span title=\"$units{$unit}{'skill 2'}&#10;$units{$unit}{'skill 2 desc'}&#10;$units{$unit}{'skill 2 proc'}%\">$units{$unit}{'skill 2 type'}</span>\n";
    # add dash for 1 and 2 star units if they have no skill 2 (none do, but put this here anyway)
    } elsif ($units{$unit}{'rarity'} < 3 && ! defined $units{$unit}{'skill 2 type'}) {
        $wikitext .= "| style=\"text-align: center\"|-\n";
    } else {
        $wikitext .= "| $units{$unit}{'skill 2 type'}\n";
    }
    
    # ATK
    $wikitext .= "| style=\"background: #FFEEEE; text-align: right\"|$units{$unit}{'atk 0'}\n";
    # add dash for ATK +1 and +2 for 1 and 2 star units
    if ($units{$unit}{'rarity'} < 3) {
        $wikitext .= "| style=\"background: #FFEEEE; text-align: center\"|-\n";
        $wikitext .= "| style=\"background: #FFEEEE; text-align: center\"|-\n";
    } else {
        $wikitext .= "| style=\"background: #FFEEEE; text-align: right\"|$units{$unit}{'atk 1'}\n";
        $wikitext .= "| style=\"background: #FFEEEE; text-align: right\"|$units{$unit}{'atk 2'}\n";
    }

    # HP
    $wikitext .= "| style=\"background: #EEFFEE; text-align: right\"|$units{$unit}{'hp 0'}\n";
    # add dash for HP +1 and +2 for 1 and 2 star units
    if ($units{$unit}{'rarity'} < 3) {
        $wikitext .= "| style=\"background: #EEFFEE; text-align: center\"|-\n";
        $wikitext .= "| style=\"background: #EEFFEE; text-align: center\"|-\n";
    } else {
        $wikitext .= "| style=\"background: #EEFFEE; text-align: right\"|$units{$unit}{'hp 1'}\n";
        $wikitext .= "| style=\"background: #EEFFEE; text-align: right\"|$units{$unit}{'hp 2'}\n";
    }

    $wikitext .= "| $units{$unit}{'cost'}\n";
}

# close table
$wikitext .= "|}\n";

# add category
$wikitext .= "\n";
$wikitext .= "[[Category:Gameplay & Mechanics]]\n";

# upload new Unit_List page, won't do anything if the text wasn't changed (null edit)
$bot->edit({
    page    => "Unit_List",
    text    => $wikitext,
    summary => "update data (bot)",
    minor   => 0,
});

# make hash of hashes for all skill desc and skill types, value is a counter
my %skills;
foreach $unit (@unitlist) {
    if (defined $units{$unit}{'skill 1 desc'} && defined $units{$unit}{'skill 1 type'}) {
        $skills{$units{$unit}{'skill 1 desc'}}{$units{$unit}{'skill 1 type'}}++;
    }
    if (defined $units{$unit}{'skill 2 desc'} && defined $units{$unit}{'skill 2 type'}) {
        $skills{$units{$unit}{'skill 2 desc'}}{$units{$unit}{'skill 2 type'}}++;
    }
}

# create subcategory pages for skill desc under skill type
#
# NOTE: a skill desc can be under more than one skill type
#
# TODO: check Category:Skill_Descriptions list against hash table 
#       and delete any unused skill desc pages
my ($skilltype, $skilldesc);
foreach $skilldesc (sort keys %skills) {
    my $wikitext;
    foreach $skilltype (sort keys %{$skills{$skilldesc}}) {
        $wikitext .= "[[Category:$skilltype]]\n";    
    }
    $wikitext .= "[[Category:Skill Descriptions]]\n";

    $bot->edit({
        page    => "Category:$skilldesc",
        text    => $wikitext,
        summary => "update categories (bot)",
        minor   => 0,
    });
}
